#!/usr/bin/env python3

import sys
import os
import requests
import whisper
import torch

res_root = os.path.join(
    os.getcwd(),
    "res"
)

weights_urls = [
    "https://github.com/opencv/opencv_zoo/raw/refs/heads/main/models/face_detection_yunet/face_detection_yunet_2023mar.onnx",
    "https://github.com/opencv/opencv_zoo/raw/refs/heads/main/models/face_detection_yunet/face_detection_yunet_2023mar_int8.onnx",
    "https://github.com/opencv/opencv_zoo/raw/refs/heads/main/models/face_detection_yunet/face_detection_yunet_2023mar_int8bq.onnx",
]

weights_whisper = [
    "tiny",
    "tiny.en"
]

def get_from_urls(urls):
    for url in urls:
        fn = os.path.join(
            res_root,
            url.split("/")[-1]
        )

        print(f"Downloading {url}..")
        res = requests.get(url)

        if not res.status_code == 200:
            print(f"Failed to download: {url}\nBailing!")
            sys.exit(1)

        with open(fn, "wb") as f:
            f.write(res.content)

def get_weights():
    get_from_urls(weights_urls)

    for n in weights_whisper:
        whisper.load_model(n, download_root=res_root)

if __name__=="__main__":
    get_weights()
